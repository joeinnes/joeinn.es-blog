---
export interface Props {
	title: string;
	bg?: string;
	fontImport?: string;
}

const { title, bg, fontImport } = Astro.props;

let background = '';
if (bg) {
	background = bg;
} else {
	background = `hsl(${Math.random() * 360} ${Math.random() * 100}% ${Math.random() * 100}%)`;
}
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/png" href="/favicon.png" />
		<link rel="manifest" href="/site.webmanifest">
		{fontImport && <link rel="stylesheet" href={fontImport} />}
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body class="font-sans bg-cover bg-center transition-colors min-h-screen">
		<slot />
	</body>
</html>

<style is:global define:vars={{ background }}>
	body {
		background: var(--background);
	}
	code {
		font-family: Menlo, Monaco, Lucida Console, Liberation Mono, DejaVu Sans Mono,
			Bitstream Vera Sans Mono, Courier New, monospace;
	}

	@media print {
		body {
			@apply bg-white;
		}
		p {
			break-inside: avoid;
		}
		@page {
			size: A4;
			margin: 0;
		}
	}

html {
	scrollbar-gutter: stable;
}

</style>
